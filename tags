!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
FLOAT	call_py.c	/^	FLOAT = 1,$/;"	e	enum:prolog_term_type	file:
FUNCTOR	call_py.c	/^	FUNCTOR = 5,$/;"	e	enum:prolog_term_type	file:
INT	call_py.c	/^	INT = 0,$/;"	e	enum:prolog_term_type	file:
LIST	call_py.c	/^	LIST = 3,$/;"	e	enum:prolog_term_type	file:
NIL	call_py.c	/^	NIL = 4,$/;"	e	enum:prolog_term_type	file:
REF	call_py.c	/^	REF = 7$/;"	e	enum:prolog_term_type	file:
STRING	call_py.c	/^	STRING = 2,$/;"	e	enum:prolog_term_type	file:
VAR	call_py.c	/^	VAR = 6,$/;"	e	enum:prolog_term_type	file:
add_dict	dict_test.py	/^def add_dict(dict, key, value):$/;"	f
add_pyobj_ref_list	call_py.c	/^pyobj_ref_node *add_pyobj_ref_list(PyObject *pynode)$/;"	f
callpy	call_py.c	/^int callpy(CTXTdecl)$/;"	f
convert_prObj_pyObj	call_py.c	/^int convert_prObj_pyObj(prolog_term prTerm, PyObject *pyObj)$/;"	f
convert_pyObj_prObj	call_py.c	/^int convert_pyObj_prObj(PyObject *pyObj, prolog_term prTerm)$/;"	f
find_length_prolog_list	call_py.c	/^int find_length_prolog_list(prolog_term V)$/;"	f
find_prolog_term_type	call_py.c	/^int find_prolog_term_type(prolog_term term)$/;"	f
get_next_ref_id	call_py.c	/^size_t get_next_ref_id()$/;"	f
get_pyobj_ref_list	call_py.c	/^PyObject *get_pyobj_ref_list(size_t ref_id)$/;"	f
get_value	dict_test.py	/^def get_value(dict, key):$/;"	f
init_dict	dict_test.py	/^def init_dict():$/;"	f
is_reference	call_py.c	/^int is_reference(prolog_term term)$/;"	f
make_pyobj_ref_node	call_py.c	/^pyobj_ref_node *make_pyobj_ref_node(PyObject *pynode)$/;"	f
next	call_py.c	/^	struct pyobj_ref_node *next;$/;"	m	struct:pyobj_ref_node	typeref:struct:pyobj_ref_node::pyobj_ref_node	file:
prlist2pyList	call_py.c	/^int prlist2pyList(prolog_term V, PyObject *pList, int count)$/;"	f
prolog_term_type	call_py.c	/^enum prolog_term_type $/;"	g	file:
pyobj_ref_list	call_py.c	/^pyobj_ref_node *pyobj_ref_list = NULL;\/\/ linked list to keep all the mappings $/;"	v
pyobj_ref_node	call_py.c	/^struct pyobj_ref_node$/;"	s	file:
pyobj_ref_node	call_py.c	/^typedef struct pyobj_ref_node pyobj_ref_node;$/;"	t	typeref:struct:pyobj_ref_node	file:
python_obj	call_py.c	/^	PyObject *python_obj;$/;"	m	struct:pyobj_ref_node	file:
ref_id	call_py.c	/^	size_t ref_id;$/;"	m	struct:pyobj_ref_node	file:
ref_id_counter	call_py.c	/^size_t ref_id_counter = 1; \/\/the reference id that is passed to the prolog side$/;"	v
return_to_prolog	call_py.c	/^int return_to_prolog(PyObject *pValue)$/;"	f
set_python_argument	call_py.c	/^int set_python_argument(prolog_term temp, PyObject *pArgs,int i)$/;"	f
sumlist3	sumlist3.py	/^def sumlist3(X,Y):$/;"	f
